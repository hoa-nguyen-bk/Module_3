/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.91
 * Generated at: 2024-08-10 04:23:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import java.sql.Statement;
import businessLogic.CSDL;
import java.sql.Connection;

public final class thong_005ftin_005fkhach_005fhang_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

Connection con = CSDL.getCon();
	Statement stm;
	ResultSet rs;
	String sql = "SELECT * FROM khach_hang";
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.Statement");
    _jspx_imports_classes.add("businessLogic.CSDL");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Thông tin khách hàng</title>\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&family=Roboto+Mono:ital,wght@0,100..700;1,100..700&display=swap\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/nes.css/2.3.0/css/nes.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');

stm = con.createStatement();
rs = stm.executeQuery(sql);

      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/style.css\">\r\n");
      out.write("<style>\r\n");
      out.write(".roboto-mono {\r\n");
      out.write("	font-family: \"Roboto Mono\", monospace;\r\n");
      out.write("	font-optical-sizing: auto;\r\n");
      out.write("	font-weight: <weight>;\r\n");
      out.write("	font-style: normal;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("html, body, pre, code, kbd, samp {\r\n");
      out.write("	font-family: \"Roboto Mono\";\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nes-field.is-inline {\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div style=\"margin: 50px auto; width: 90%\">\r\n");
      out.write("		<div class=\"nes-container  with-title\">\r\n");
      out.write("			<p class=\"title\">Thông tin khách hàng</p>\r\n");
      out.write("\r\n");
      out.write("			<table border=\"1\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>Mã KH</th>\r\n");
      out.write("					<th>Tên khách hàng</th>\r\n");
      out.write("					<th>Giới tính</th>\r\n");
      out.write("					<th>Địa chỉ</th>\r\n");
      out.write("					<th>Số điện thoại</th>\r\n");
      out.write("					<th>Email</th>\r\n");
      out.write("					<th><img src=\"img/but_sua.png\" alt=\"\" /></th>\r\n");
      out.write("					<th><img src=\"img/but_xoa.png\" alt=\"\" /></th>\r\n");
      out.write("				</tr>\r\n");
      out.write("				");

				while (rs.next()) {
				
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td>");
      out.print(rs.getString("ma_khach_hang"));
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(rs.getString("ten_khach_hang"));
      out.write("</td>\r\n");
      out.write("					<td><img\r\n");
      out.write("						src=\"img/");
      out.print(rs.getBoolean("phai") ? "nu" : "nam");
      out.write(".jpg\" alt=\"\" /></td>\r\n");
      out.write("					<td>");
      out.print(rs.getString("dia_chi"));
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(rs.getString("dien_thoai"));
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(rs.getString("email"));
      out.write("</td>\r\n");
      out.write("					<td><button id=\"edit\">Sửa</button> </td>\r\n");
      out.write("					<td><button id=\"delete\">Xóa</button></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				");

				}
				
      out.write("\r\n");
      out.write("			</table>\r\n");
      out.write("		</div>\r\n");
      out.write("		<br />\r\n");
      out.write("		<form method=\"post\" class=\"form\">\r\n");
      out.write("			<div id=\"search_form\" class=\"nes-container with-title\">\r\n");
      out.write("				<p class=\"title\">Cập nhập thông tin khách hàng</p>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"nes-field is-inline\">\r\n");
      out.write("					<label>Mã khách hàng</label> <input type=\"text\" class=\"nes-input\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"nes-field is-inline\">\r\n");
      out.write("					<label>Tên khách hàng</label> <input type=\"text\" class=\"nes-input\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"nes-field\">\r\n");
      out.write("					<label>Giới tính</label> <label> <input type=\"radio\"\r\n");
      out.write("						class=\"nes-radio\" name=\"answer\" checked /> <span>Nữ</span>\r\n");
      out.write("					</label> <label> <input type=\"radio\" class=\"nes-radio\"\r\n");
      out.write("						name=\"answer\" /> <span>Nam</span>\r\n");
      out.write("					</label>\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"nes-field is-inline\">\r\n");
      out.write("					<label>Địa chỉ</label> <input type=\"text\" class=\"nes-input\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"nes-field is-inline\">\r\n");
      out.write("					<label>Điện thoại</label> <input type=\"text\" class=\"nes-input\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"nes-field is-inline\">\r\n");
      out.write("					<label>Email</label> <input type=\"text\" class=\"nes-input\">\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"nes-field is-inline\">\r\n");
      out.write("					<button type=\"submit\" class=\"nes-btn  is-primary\">Cập nhập</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
